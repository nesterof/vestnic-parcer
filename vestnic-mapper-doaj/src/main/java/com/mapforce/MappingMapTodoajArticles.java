/**
 * MappingMapTodoajArticles.java
 *
 * This file was generated by MapForce 2011r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import java.util.*;

public class MappingMapTodoajArticles extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = false;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class seq1_Main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_instance_Name25420429_2017_17_3_unicode;
	
		public seq1_Main(com.altova.mapforce.IMFNode var1_instance_Name25420429_2017_17_3_unicode)
		{
			this.var1_instance_Name25420429_2017_17_3_unicode = var1_instance_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_Main closure;
			java.lang.String var2_const_;
			public Enumerator(seq1_Main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_ = "";
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("records", var2_const_), var2_const_, (new seq2_create_element_with_prefix(closure.var1_instance_Name25420429_2017_17_3_unicode)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode;
	
		public seq2_create_element_with_prefix(com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode)
		{
			this.var1_Name25420429_2017_17_3_unicode = var1_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_create_element_with_prefix closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq2_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var3_const_), closure.var1_Name25420429_2017_17_3_unicode));
				current = com.altova.functions.Core.createNamespace("iso_639-2b", "http://www.doaj.org/schemas/iso_639-2b/1.0");
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), "xsi", com.altova.functions.Core.box("C:/Users/test-1/Desktop/doajArticles.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 11;				
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("article", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("articles", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))))))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var2_map_filter_elements.moveNext()) {state = 12; return false; }
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artType", var3_const_), ((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current()))))), "RAR"))) {state = 11; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("record", var3_const_), var3_const_, (new seq3_create_element_with_prefix(closure.var1_Name25420429_2017_17_3_unicode, ((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
		com.altova.mapforce.IMFNode var10_cur_filter_elements;
	
		public seq3_create_element_with_prefix(com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode, com.altova.mapforce.IMFNode var10_cur_filter_elements)
		{
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
			this.var10_cur_filter_elements = var10_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_create_element_with_prefix closure;
			java.lang.String var12_const__;
			java.lang.String var1_const_;
			com.altova.mapforce.IEnumerable var19_filter_elements;
			com.altova.mapforce.IEnumerable var16_filter_elements;
			com.altova.mapforce.IEnumerable var14_filter_elements;
			java.lang.String var11_cast;
			javax.xml.namespace.QName var7_create_qname;
			com.altova.mapforce.IMFNode var5_filter_elements;
			com.altova.mapforce.IMFNode var8_filter_elements;
			java.lang.String var9_cast;
			com.altova.mapforce.IEnumerable var6_vmf1_inputtoresult;
			javax.xml.namespace.QName var3_create_qname;
			com.altova.mapforce.IEnumerable var4_cast;
			IEnumerator var13_map_filter_elements;
			javax.xml.namespace.QName var17_create_qname;
			IEnumerator var15_map_filter_elements;
			java.lang.String var18_const__;
			public Enumerator(seq3_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 50:	if (moveNext_50()) return true; break;
					case 51:	if (moveNext_51()) return true; break;
					case 64:	if (moveNext_64()) return true; break;
					case 65:	if (moveNext_65()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var12_const__ = "-";
				var1_const_ = "";
				var19_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("files", var1_const_), closure.var10_cur_filter_elements));
				var16_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("abstracts", var1_const_), closure.var10_cur_filter_elements));
				var14_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artTitles", var1_const_), closure.var10_cur_filter_elements));
				var11_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("pages", var1_const_), closure.var10_cur_filter_elements)));
				var7_create_qname = com.altova.functions.Core.createQName("volume", var1_const_);
				var5_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var1_const_), closure.var2_Name25420429_2017_17_3_unicode));
				var8_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var1_const_), var5_filter_elements));
				var9_cast = com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("number", var1_const_), var8_filter_elements))))))))));
				var6_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.create(var9_cast));
				var3_create_qname = com.altova.functions.Core.createQName("issn", var1_const_);
				var4_cast = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var3_create_qname, var5_filter_elements)))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("language", var1_const_), var1_const_, com.altova.functions.Core.box("rus"));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("publisher", var1_const_), var1_const_, com.altova.functions.Core.box("Novosibirsk State University Press"));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("journalTitle", var1_const_), var1_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first((new seq4_if_greater(closure.var2_Name25420429_2017_17_3_unicode)))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElementWithPrefix(var3_create_qname, var1_const_, var4_cast);
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("eissn", var1_const_), var1_const_, var4_cast);
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!(com.altova.functions.Core.exists(var6_vmf1_inputtoresult))) {state = 11; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("publicationDate", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat("20", (java.lang.String)com.altova.functions.Core.first((new seq5_if_equal(closure.var2_Name25420429_2017_17_3_unicode)))), "-"), (java.lang.String)com.altova.functions.Core.first(var6_vmf1_inputtoresult))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createElementWithPrefix(var7_create_qname, var1_const_, com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var7_create_qname, var8_filter_elements)))))))))), " ("), var9_cast), ")")));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 18;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("startPage", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Core.substringBefore(var11_cast, var12_const__)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 19;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("endPage", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Core.substringAfter(var11_cast, var12_const__)));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("codes", var1_const_), closure.var10_cur_filter_elements)))) {state = 21; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("doi", var1_const_), var1_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first((new seq6_cond_concat(closure.var10_cur_filter_elements, closure.var2_Name25420429_2017_17_3_unicode)))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 30;				
				if (!(com.altova.functions.Core.exists(var14_filter_elements))) {state = 28; return false; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 44;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("authors", var1_const_), var1_const_, (new seq9_cond_map_filter_elements(closure.var10_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 31;				
				var13_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artTitle", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var14_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 31;				
				if (!var13_map_filter_elements.moveNext()) {state = 32; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), ((com.altova.mapforce.IMFNode)(var13_map_filter_elements.current())))))))) {state = 31; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("title", var1_const_), var1_const_, (new seq8_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var13_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_32() throws Exception {
				state = 28;				
				var13_map_filter_elements.close(); var13_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 45;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("affiliationsList", var1_const_), var1_const_, (new seq15_cond_map_filter_elements(closure.var10_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_45() throws Exception {
				state = 50;				
				if (!(com.altova.functions.Core.exists(var16_filter_elements))) {state = 47; return false; }
				var17_create_qname = com.altova.functions.Core.createQName("abstract", var1_const_);
				var15_map_filter_elements = (com.altova.functions.Core.filterElements(var17_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var16_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 65;				
				if (!(com.altova.functions.Core.exists(var19_filter_elements))) {state = 64; return false; }
				return false;
			}
			private boolean moveNext_50() throws Exception {
				state = 50;				
				if (!var15_map_filter_elements.moveNext()) {state = 51; return false; }
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), ((com.altova.mapforce.IMFNode)(var15_map_filter_elements.current()))))), "ENG"))) {state = 50; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var17_create_qname, var1_const_, (new seq17_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var15_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_51() throws Exception {
				state = 47;				
				var15_map_filter_elements.close(); var15_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_64() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("keywords", var1_const_), var1_const_, (new seq18_cond_map_filter_elements(closure.var10_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_65() throws Exception {
				state = 64;				
				var18_const__ = "_";
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("fullTextUrl", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Core.concat("https://nsu.ru/ef/vestnik_ngu_ef/", com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var1_const_), var8_filter_elements)))))))))), var18_const__), var9_cast), var18_const__), com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.functions.Core.substringBefore(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("file", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var19_filter_elements)))), ".")))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var13_map_filter_elements.close(); var13_map_filter_elements = null;
				var15_map_filter_elements.close(); var15_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_if_greater implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
	
		public seq4_if_greater(com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode)
		{
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_if_greater closure;
			java.lang.String var1_const_;
			public Enumerator(seq4_if_greater closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_const_ = "";
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var1_const_), closure.var2_Name25420429_2017_17_3_unicode)))))))))))))), "2015"))) {state = 11; return false; }
				current = "Mir \u00C8konomiki i Upravleni\u00E2";
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = "Vestnik Novosibirskogo Gosudarstvennogo Universiteta. Seri\u00E2: Social\u02B9no-\u00C8konomi\u010Deskie Nauki";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
	
		public seq5_if_equal(com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode)
		{
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_if_equal closure;
			java.lang.String var1_const_;
			com.altova.mapforce.IMFNode var5_filter_elements;
			javax.xml.namespace.QName var4_create_qname;
			java.lang.String var3_;
			public Enumerator(seq5_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_const_ = "";
				var5_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var1_const_), closure.var2_Name25420429_2017_17_3_unicode))));
				var4_create_qname = com.altova.functions.Core.createQName("volume", var1_const_);
				var3_ = com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var4_create_qname, var5_filter_elements))))))))));
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.functions.Core.stringLength(var3_)))), new java.math.BigDecimal("1")))) {state = 11; return false; }
				current = com.altova.functions.Core.concat("0", var3_);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var4_create_qname, var5_filter_elements))))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_cond_concat implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
	
		public seq6_cond_concat(com.altova.mapforce.IMFNode var1_cur_filter_elements, com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_cond_concat closure;
			java.lang.String var3_const_;
			java.lang.String var5_const__;
			com.altova.mapforce.IMFNode var4_filter_elements;
			public Enumerator(seq6_cond_concat closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var3_const_ = "";
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("codes", var3_const_), closure.var1_cur_filter_elements)))) {state = 0; return false; }
				var5_const__ = "-";
				var4_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var3_const_), closure.var2_Name25420429_2017_17_3_unicode))));
				current = com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat((java.lang.String)com.altova.functions.Core.first((new seq7_if_greater(closure.var2_Name25420429_2017_17_3_unicode))), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var3_const_), var4_filter_elements))))))))))), var5_const__), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("volume", var3_const_), var4_filter_elements))))))))))), var5_const__), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("number", var3_const_), var4_filter_elements))))))))))), var5_const__), com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("pages", var3_const_), closure.var1_cur_filter_elements))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_if_greater implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
	
		public seq7_if_greater(com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode)
		{
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_if_greater closure;
			java.lang.String var1_const_;
			public Enumerator(seq7_if_greater closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_const_ = "";
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var1_const_), closure.var2_Name25420429_2017_17_3_unicode)))))))))))))), "2015"))) {state = 11; return false; }
				current = "10.25205/2542-0429-";
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = "10.25205/1818-7862";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq8_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_create_element_with_prefix closure;
			java.lang.String var1_const_;
			public Enumerator(seq8_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = "";
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("language", var1_const_), var1_const_, com.altova.functions.Core.box("eng"));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = (java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_cur_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq9_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_cond_map_filter_elements closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq9_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("authors", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("author", var3_const_);
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(var5_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				if (!(com.altova.functions.Core.exists((new seq10_map_map_filter_elements(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current()))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var5_create_qname, var3_const_, (new seq12_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_map_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq10_map_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_map_map_filter_elements closure;
			IEnumerator var1_map_map_filter_elements;
			public Enumerator(seq10_map_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_map_filter_elements = ((new seq11_map_filter_elements(closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(((Boolean)(var1_map_map_filter_elements.current())))) {state = 5; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq11_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_map_filter_elements closure;
			java.lang.String var3_const_;
			IEnumerator var1_map_filter_elements;
			public Enumerator(seq11_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var1_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				current = com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq12_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_create_element_with_prefix closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var5_filter_elements;
			IEnumerator var1_map_filter_elements;
			IEnumerator var4_map_filter_elements;
			public Enumerator(seq12_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var5_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements));
				var1_map_filter_elements = (var5_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current())))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("name", var3_const_), var3_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("surname", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))))), " "), com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("initials", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 16;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				var4_map_filter_elements = (var5_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var4_map_filter_elements.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq13_if_equal(((com.altova.mapforce.IMFNode)(var4_map_filter_elements.current()))))))) {state = 16; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("email", var3_const_), var3_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first((new seq14_cond_map_filter_elements(((com.altova.mapforce.IMFNode)(var4_map_filter_elements.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 0;				
				var4_map_filter_elements.close(); var4_map_filter_elements = null;
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("affiliationId", var3_const_), var3_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("num", var3_const_), closure.var2_cur_filter_elements))))))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				var4_map_filter_elements.close(); var4_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq13_if_equal(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_if_equal closure;
			java.lang.String var2_const_;
			public Enumerator(seq13_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_ = "";
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var2_const_), closure.var1_cur_filter_elements)))))) {state = 11; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("email", var2_const_), closure.var1_cur_filter_elements));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq14_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_cond_map_filter_elements closure;
			java.lang.String var3_const_;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq14_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), closure.var1_cur_filter_elements)))))) {state = 0; return false; }
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("email", var3_const_), closure.var1_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq15_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_cond_map_filter_elements closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			IEnumerator var2_map_filter_elements;
			IEnumerator var5_map_filter_elements;
			public Enumerator(seq15_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("authors", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("author", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				var5_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), ((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var5_map_filter_elements.moveNext()) {state = 14; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("affiliationName", var3_const_), var3_const_, (new seq16_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())), ((com.altova.mapforce.IMFNode)(var5_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 9;				
				var5_map_filter_elements.close(); var5_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var5_map_filter_elements.close(); var5_map_filter_elements = null;
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
	
		public seq16_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements, com.altova.mapforce.IMFNode var3_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16_create_element_with_prefix closure;
			java.lang.String var1_const_;
			public Enumerator(seq16_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = "";
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("affiliationId", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("num", var1_const_), closure.var2_cur_filter_elements))))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("orgName", var1_const_), closure.var3_cur_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq17_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_create_element_with_prefix closure;
			java.lang.String var1_const_;
			public Enumerator(seq17_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = "";
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("language", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Lang.lowercase(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), closure.var2_cur_filter_elements))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.nodeToString(closure.var2_cur_filter_elements);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq18_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18_cond_map_filter_elements closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq18_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("keywords", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("keyword", var3_const_);
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(var5_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("kwdGroup", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var5_create_qname, var3_const_, com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varName25420429_2017_17_3_unicode2Instance;

	public void run(String Name25420429_2017_17_3_unicode2SourceFilename, String doajArticlesTargetFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + Name25420429_2017_17_3_unicode2SourceFilename + "...\n");
		com.altova.io.FileInput Name25420429_2017_17_3_unicode2Source = new com.altova.io.FileInput(Name25420429_2017_17_3_unicode2SourceFilename);
		// open target stream
		com.altova.io.FileOutput doajArticlesTarget = new com.altova.io.FileOutput(doajArticlesTargetFilename);

		// run
		run(Name25420429_2017_17_3_unicode2Source, doajArticlesTarget);

		// close source streams
		Name25420429_2017_17_3_unicode2Source.close();
		// close target stream
		writeTrace("Saving " + doajArticlesTargetFilename + "...\n");
		doajArticlesTarget.close();
	}


	// main entry point

	public void run(com.altova.io.Input Name25420429_2017_17_3_unicode2Source, com.altova.io.Output doajArticlesTarget) throws Exception {
		// Open the source(s)
		org.w3c.dom.Document doc_Name25420429_2017_17_3_unicode2 = XmlTreeOperations.loadDocument(Name25420429_2017_17_3_unicode2Source);
		varName25420429_2017_17_3_unicode2Instance = doc_Name25420429_2017_17_3_unicode2;
		Name25420429_2017_17_3_unicode2Source.close();

		// Create the target
		org.w3c.dom.Document doajArticles2Doc = (doajArticlesTarget.getType() == com.altova.io.Output.IO_DOM) ? doajArticlesTarget.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		seq1_Main mapping = new seq1_Main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varName25420429_2017_17_3_unicode2Instance, Name25420429_2017_17_3_unicode2Source.getFilename()));

		com.altova.xml.MFDOMWriter.write(mapping, doajArticles2Doc);
		// Close the target
		XmlTreeOperations.saveDocument(doajArticles2Doc, doajArticlesTarget, "UTF-8", false, false, true);

		
		if (runDoesCloseAll)
		{
			Name25420429_2017_17_3_unicode2Source.close();
			doajArticlesTarget.close();
		}
	}



}
