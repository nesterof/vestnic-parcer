<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2018sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="xs fn">
    <xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
    <xsl:template match="/">
        <xsl:variable name="var15_journal" as="node()?" select="journal"/>
        <records xmlns:iso_639-2b="http://www.doaj.org/schemas/iso_639-2b/1.0">
            <xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'file:///E:/Downloads/doajArticles.xsd'"/>
            <xsl:for-each select="($var15_journal/issue/articles/article)[(fn:string(artType) = 'RAR')]">
                <xsl:variable name="var14_create_T__article" as="node()">
                    <T6_article>
                        <xsl:for-each select="authors">
                            <authors>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </authors>
                        </xsl:for-each>
                        <xsl:for-each select="artTitles">
                            <artTitles>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </artTitles>
                        </xsl:for-each>
                        <xsl:for-each select="text">
                            <text>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </text>
                        </xsl:for-each>
                        <xsl:for-each select="files">
                            <files>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </files>
                        </xsl:for-each>
                        <xsl:for-each select="abstracts">
                            <abstracts>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </abstracts>
                        </xsl:for-each>
                        <xsl:for-each select="codes">
                            <codes>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </codes>
                        </xsl:for-each>
                        <xsl:for-each select="keywords">
                            <keywords>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </keywords>
                        </xsl:for-each>
                        <xsl:for-each select="references">
                            <references>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </references>
                        </xsl:for-each>
                        <xsl:for-each select="artFunding">
                            <artFunding>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </artFunding>
                        </xsl:for-each>
                        <xsl:for-each select="dates">
                            <dates>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </dates>
                        </xsl:for-each>
                    </T6_article>
                </xsl:variable>
                <xsl:variable name="var12_pages" as="node()*" select="$var14_create_T__article/pages"/>
                <xsl:variable name="var13_authors" as="node()*" select="$var14_create_T__article/authors"/>
                <record>
                    <language>rus</language>
                    <publisher>Vestnik Novosibirsk State University</publisher>
                    <journalTitle>Vestnik Novosibirsk State University</journalTitle>
                    <xsl:for-each select="$var15_journal">
                        <issn>
                            <xsl:sequence select="fn:string(issn)"/>
                        </issn>
                    </xsl:for-each>
                    <xsl:for-each select="$var15_journal">
                        <eissn>
                            <xsl:sequence select="fn:string(issn)"/>
                        </eissn>
                    </xsl:for-each>
                    <xsl:for-each select="$var14_create_T__article/dates/dateReceived">
                        <xsl:variable name="var2___as_double" as="xs:double" select="xs:double(xs:decimal('2'))"/>
                        <xsl:variable name="var3___as_double" as="xs:double" select="xs:double(xs:decimal('4'))"/>
                        <xsl:variable name="var1_cur_as_string" as="xs:string" select="fn:string(.)"/>
                        <publicationDate>
                            <xsl:sequence select="fn:concat(fn:concat(fn:concat(fn:concat(fn:substring($var1_cur_as_string, xs:double(xs:decimal('7')), $var3___as_double), '-'), fn:substring($var1_cur_as_string, $var3___as_double, $var2___as_double)), '-'), fn:substring($var1_cur_as_string, xs:double(xs:decimal('1')), $var2___as_double))"/>
                        </publicationDate>
                    </xsl:for-each>
                    <xsl:for-each select="$var12_pages">
                        <xsl:variable name="var4_cur_as_string" as="xs:string" select="fn:string(.)"/>
                        <volume>
                            <xsl:sequence select="xs:string((xs:double(fn:substring-after($var4_cur_as_string, '-')) - xs:double(fn:substring-before($var4_cur_as_string, '-'))))"/>
                        </volume>
                    </xsl:for-each>
                    <xsl:for-each select="$var12_pages">
                        <startPage>
                            <xsl:sequence select="fn:substring-before(fn:string(.), '-')"/>
                        </startPage>
                    </xsl:for-each>
                    <xsl:for-each select="$var12_pages">
                        <endPage>
                            <xsl:sequence select="fn:substring-after(fn:string(.), '-')"/>
                        </endPage>
                    </xsl:for-each>
                    <xsl:for-each select="$var14_create_T__article/codes/doi">
                        <doi>
                            <xsl:sequence select="fn:string(.)"/>
                        </doi>
                    </xsl:for-each>
                    <xsl:for-each select="$var15_journal">
                        <xsl:variable name="var5_journalInfo" as="node()" select="journalInfo"/>
                        <title>
                            <xsl:attribute name="language" select="fn:lower-case(fn:string($var5_journalInfo/@lang))"/>
                            <xsl:sequence select="fn:string($var5_journalInfo/title)"/>
                        </title>
                    </xsl:for-each>
                    <xsl:for-each select="$var13_authors">
                        <authors>
                            <xsl:for-each select="author">
                                <xsl:variable name="var9_resultof_filter" as="node()*" select="(./individInfo)[fn:exists((./@lang)[('ENG' = fn:string(.))])]"/>
                                <author>
                                    <xsl:for-each select="$var9_resultof_filter">
                                        <xsl:variable name="var7_create_individInfo" as="node()">
                                            <individInfo>
                                                <xsl:for-each select="surname">
                                                    <surname>
                                                        <xsl:sequence select="fn:string(.)"/>
                                                    </surname>
                                                </xsl:for-each>
                                                <xsl:for-each select="initials">
                                                    <initials>
                                                        <xsl:sequence select="fn:string(.)"/>
                                                    </initials>
                                                </xsl:for-each>
                                                <xsl:for-each select="orgName">
                                                    <orgName>
                                                        <xsl:sequence select="fn:string(.)"/>
                                                    </orgName>
                                                </xsl:for-each>
                                                <xsl:for-each select="email">
                                                    <email>
                                                        <xsl:sequence select="fn:string(.)"/>
                                                    </email>
                                                </xsl:for-each>
                                            </individInfo>
                                        </xsl:variable>
                                        <xsl:for-each select="$var7_create_individInfo/surname">
                                            <xsl:variable name="var6_cur" as="node()" select="."/>
                                            <xsl:for-each select="$var7_create_individInfo/initials">
                                                <name>
                                                    <xsl:sequence select="fn:concat(fn:concat(fn:string($var6_cur), ' '), fn:string(.))"/>
                                                </name>
                                            </xsl:for-each>
                                        </xsl:for-each>
                                    </xsl:for-each>
                                    <xsl:for-each select="$var9_resultof_filter">
                                        <xsl:variable name="var8_create_individInfo" as="node()">
                                            <individInfo>
                                                <xsl:for-each select="surname">
                                                    <surname>
                                                        <xsl:sequence select="fn:string(.)"/>
                                                    </surname>
                                                </xsl:for-each>
                                                <xsl:for-each select="initials">
                                                    <initials>
                                                        <xsl:sequence select="fn:string(.)"/>
                                                    </initials>
                                                </xsl:for-each>
                                                <xsl:for-each select="orgName">
                                                    <orgName>
                                                        <xsl:sequence select="fn:string(.)"/>
                                                    </orgName>
                                                </xsl:for-each>
                                                <xsl:for-each select="email">
                                                    <email>
                                                        <xsl:sequence select="fn:string(.)"/>
                                                    </email>
                                                </xsl:for-each>
                                            </individInfo>
                                        </xsl:variable>
                                        <xsl:for-each select="$var8_create_individInfo/email">
                                            <email>
                                                <xsl:sequence select="fn:string(.)"/>
                                            </email>
                                        </xsl:for-each>
                                    </xsl:for-each>
                                    <xsl:for-each select="@num">
                                        <affiliationId>
                                            <xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
                                        </affiliationId>
                                    </xsl:for-each>
                                </author>
                            </xsl:for-each>
                        </authors>
                    </xsl:for-each>
                    <xsl:for-each select="$var13_authors">
                        <affiliationsList>
                            <xsl:for-each select="author">
                                <xsl:variable name="var10_cur" as="node()" select="."/>
                                <xsl:for-each select="individInfo/orgName">
                                    <affiliationName>
                                        <xsl:for-each select="$var10_cur/@num">
                                            <xsl:attribute name="affiliationId" select="xs:string(xs:integer(fn:string(.)))"/>
                                        </xsl:for-each>
                                        <xsl:sequence select="fn:string(.)"/>
                                    </affiliationName>
                                </xsl:for-each>
                            </xsl:for-each>
                        </affiliationsList>
                    </xsl:for-each>
                    <xsl:for-each select="($var14_create_T__article/abstracts/abstract)[fn:exists((./@lang)[(fn:string(.) = 'ENG')])]">
                        <xsl:variable name="var11_create_abstract" as="node()">
                            <abstract>
                                <xsl:sequence select="(./@node(), ./node())"/>
                            </abstract>
                        </xsl:variable>
                        <abstract>
                            <xsl:for-each select="$var11_create_abstract/@lang">
                                <xsl:attribute name="language" select="fn:lower-case(fn:string(.))"/>
                            </xsl:for-each>
                            <xsl:sequence select="fn:string($var11_create_abstract)"/>
                        </abstract>
                    </xsl:for-each>
                    <xsl:for-each select="$var14_create_T__article/files/file">
                        <fullTextUrl>
                            <xsl:sequence select="xs:string(xs:anyURI(fn:string(.)))"/>
                        </fullTextUrl>
                    </xsl:for-each>
                    <keywords>
                        <xsl:for-each select="$var14_create_T__article/keywords/kwdGroup/keyword">
                            <keyword>
                                <xsl:sequence select="fn:string(.)"/>
                            </keyword>
                        </xsl:for-each>
                    </keywords>
                </record>
            </xsl:for-each>
        </records>
    </xsl:template>
</xsl:stylesheet>
