/**
 * MappingMapTodoajArticles.java
 *
 * This file was generated by MapForce 2018sp1.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import java.util.*;

public class MappingMapTodoajArticles extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_25420429_2017_17_3_unicode_Instance;
	
		public main(com.altova.mapforce.IMFNode var1_25420429_2017_17_3_unicode_Instance)
		{
			this.var1_25420429_2017_17_3_unicode_Instance = var1_25420429_2017_17_3_unicode_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			com.altova.mapforce.IEnumerable var2_journal;
			public Enumerator(main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				var2_journal = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", ""), closure.var1_25420429_2017_17_3_unicode_Instance));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("records", ""), (new seq1_join(var2_journal)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq1_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_journal;
	
		public seq1_join(com.altova.mapforce.IEnumerable var1_journal)
		{
			this.var1_journal = var1_journal;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IMFNode var3_create_element_qname;
			com.altova.mapforce.IEnumerable var4_box;
			com.altova.mapforce.IEnumerable var5_authors;
			com.altova.mapforce.IEnumerable var6_pages;
			public Enumerator(seq1_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createNamespace("iso_639-2b", "http://www.doaj.org/schemas/iso_639-2b/1.0");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("xsi:noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), com.altova.functions.Core.box("file:///E:/Downloads/doajArticles.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var2_filter = ((new seq2_join(closure.var1_journal))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 5; return false; }
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artType", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))))), "RAR"))) {state = 4; return false; }
				var3_create_element_qname = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("T6_article", ""), (new seq3_join(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				var4_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box("Vestnik Novosibirsk State University"));
				var5_authors = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("authors", ""), var3_create_element_qname));
				var6_pages = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("pages", ""), var3_create_element_qname));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("record", ""), (new seq5_join(var3_create_element_qname, closure.var1_journal, var4_box, var5_authors, var6_pages)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_journal;
	
		public seq2_join(com.altova.mapforce.IEnumerable var1_journal)
		{
			this.var1_journal = var1_journal;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_join closure;
			IEnumerator var2_journal;
			IEnumerator var3_article;
			public Enumerator(seq2_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_journal = (closure.var1_journal).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_journal.moveNext()) {state = 3; return false; }
				var3_article = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("article", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("articles", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", ""), ((com.altova.mapforce.IMFNode)(var2_journal.current())))))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_journal != null ) { var2_journal.close(); var2_journal = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_article.moveNext()) {state = 5; return false; }
				current = var3_article.current();
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_article != null ) { var3_article.close(); var3_article = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_article != null ) { var3_article.close(); var3_article = null; }
				if( var2_journal != null ) { var2_journal.close(); var2_journal = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq3_join(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_join closure;
			IEnumerator var2_authors;
			IEnumerator var3_artTitles;
			IEnumerator var4_text;
			IEnumerator var5_files;
			IEnumerator var6_abstracts;
			IEnumerator var7_codes;
			IEnumerator var8_keywords;
			IEnumerator var9_references;
			IEnumerator var10_artFunding;
			IEnumerator var11_dates;
			public Enumerator(seq3_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_authors = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("authors", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_authors.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("authors", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var2_authors.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var2_authors != null ) { var2_authors.close(); var2_authors = null; }
				var3_artTitles = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artTitles", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var3_artTitles.moveNext()) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("artTitles", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var3_artTitles.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var3_artTitles != null ) { var3_artTitles.close(); var3_artTitles = null; }
				var4_text = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("text", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var4_text.moveNext()) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("text", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var4_text.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var4_text != null ) { var4_text.close(); var4_text = null; }
				var5_files = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("files", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var5_files.moveNext()) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("files", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var5_files.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if( var5_files != null ) { var5_files.close(); var5_files = null; }
				var6_abstracts = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("abstracts", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_abstracts.moveNext()) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("abstracts", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var6_abstracts.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if( var6_abstracts != null ) { var6_abstracts.close(); var6_abstracts = null; }
				var7_codes = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("codes", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var7_codes.moveNext()) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("codes", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var7_codes.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if( var7_codes != null ) { var7_codes.close(); var7_codes = null; }
				var8_keywords = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("keywords", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var8_keywords.moveNext()) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("keywords", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var8_keywords.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if( var8_keywords != null ) { var8_keywords.close(); var8_keywords = null; }
				var9_references = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("references", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 23;				
				if (!var9_references.moveNext()) {state = 24; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("references", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var9_references.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if( var9_references != null ) { var9_references.close(); var9_references = null; }
				var10_artFunding = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artFunding", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 26;				
				if (!var10_artFunding.moveNext()) {state = 27; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("artFunding", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var10_artFunding.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 29;				
				if( var10_artFunding != null ) { var10_artFunding.close(); var10_artFunding = null; }
				var11_dates = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dates", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 29;				
				if (!var11_dates.moveNext()) {state = 30; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("dates", ""), (new seq4_join(((com.altova.mapforce.IMFNode)(var11_dates.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 0;				
				if( var11_dates != null ) { var11_dates.close(); var11_dates = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_authors != null ) { var2_authors.close(); var2_authors = null; }
				if( var3_artTitles != null ) { var3_artTitles.close(); var3_artTitles = null; }
				if( var4_text != null ) { var4_text.close(); var4_text = null; }
				if( var5_files != null ) { var5_files.close(); var5_files = null; }
				if( var6_abstracts != null ) { var6_abstracts.close(); var6_abstracts = null; }
				if( var7_codes != null ) { var7_codes.close(); var7_codes = null; }
				if( var8_keywords != null ) { var8_keywords.close(); var8_keywords = null; }
				if( var9_references != null ) { var9_references.close(); var9_references = null; }
				if( var10_artFunding != null ) { var10_artFunding.close(); var10_artFunding = null; }
				if( var11_dates != null ) { var11_dates.close(); var11_dates = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq4_join(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_join closure;
			IEnumerator var2_select_attributes;
			IEnumerator var3_select_children;
			public Enumerator(seq4_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_select_attributes = (com.altova.functions.Core.selectAttributes(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_select_attributes.moveNext()) {state = 3; return false; }
				current = var2_select_attributes.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var2_select_attributes != null ) { var2_select_attributes.close(); var2_select_attributes = null; }
				var3_select_children = (com.altova.functions.Core.selectChildren(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var3_select_children.moveNext()) {state = 6; return false; }
				current = var3_select_children.current();
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_select_children != null ) { var3_select_children.close(); var3_select_children = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_select_attributes != null ) { var2_select_attributes.close(); var2_select_attributes = null; }
				if( var3_select_children != null ) { var3_select_children.close(); var3_select_children = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
		com.altova.mapforce.IEnumerable var2_journal;
		com.altova.mapforce.IEnumerable var3_box;
		com.altova.mapforce.IEnumerable var4_authors;
		com.altova.mapforce.IEnumerable var5_pages;
	
		public seq5_join(com.altova.mapforce.IMFNode var1_cur, com.altova.mapforce.IEnumerable var2_journal, com.altova.mapforce.IEnumerable var3_box, com.altova.mapforce.IEnumerable var4_authors, com.altova.mapforce.IEnumerable var5_pages)
		{
			this.var1_cur = var1_cur;
			this.var2_journal = var2_journal;
			this.var3_box = var3_box;
			this.var4_authors = var4_authors;
			this.var5_pages = var5_pages;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_join closure;
			IEnumerator var6_journal;
			IEnumerator var7_journal;
			IEnumerator var8_dates;
			IEnumerator var9_dateReceived;
			IEnumerator var13_pages;
			double var10_cast;
			double var11_cast;
			java.lang.String var14_cast;
			java.lang.String var12_cast;
			IEnumerator var15_pages;
			IEnumerator var16_pages;
			IEnumerator var17_codes;
			IEnumerator var18_doi;
			IEnumerator var19_journal;
			IEnumerator var20_authors;
			IEnumerator var21_authors;
			IEnumerator var22_filter;
			IEnumerator var23_files;
			IEnumerator var24_file;
			public Enumerator(seq5_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("language", ""), com.altova.functions.Core.box("rus"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("publisher", ""), closure.var3_box);
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("journalTitle", ""), closure.var3_box);
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				var6_journal = (closure.var2_journal).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var6_journal.moveNext()) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("issn", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issn", ""), ((com.altova.mapforce.IMFNode)(var6_journal.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var6_journal != null ) { var6_journal.close(); var6_journal = null; }
				var7_journal = (closure.var2_journal).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var7_journal.moveNext()) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("eissn", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issn", ""), ((com.altova.mapforce.IMFNode)(var7_journal.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var7_journal != null ) { var7_journal.close(); var7_journal = null; }
				var8_dates = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dates", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_dates.moveNext()) {state = 12; return false; }
				var9_dateReceived = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateReceived", ""), ((com.altova.mapforce.IMFNode)(var8_dates.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 16;				
				if( var8_dates != null ) { var8_dates.close(); var8_dates = null; }
				var13_pages = (closure.var5_pages).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var9_dateReceived.moveNext()) {state = 14; return false; }
				var10_cast = com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("2"));
				var11_cast = com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("4"));
				var12_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_dateReceived.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("publicationDate", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.substring(var12_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("7")), var11_cast), "-"), com.altova.functions.Core.substring(var12_cast, var11_cast, var10_cast)), "-"), com.altova.functions.Core.substring(var12_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("1")), var10_cast))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var9_dateReceived != null ) { var9_dateReceived.close(); var9_dateReceived = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var13_pages.moveNext()) {state = 17; return false; }
				var14_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_pages.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("volume", ""), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.subtract(com.altova.CoreTypes.parseDecimal(com.altova.functions.Core.substringAfter(var14_cast, "-")), com.altova.CoreTypes.parseDecimal(com.altova.functions.Core.substringBefore(var14_cast, "-"))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if( var13_pages != null ) { var13_pages.close(); var13_pages = null; }
				var15_pages = (closure.var5_pages).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 19;				
				if (!var15_pages.moveNext()) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("startPage", ""), com.altova.functions.Core.box(com.altova.functions.Core.substringBefore(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_pages.current()))), "-")));
				pos++;
				return true;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if( var15_pages != null ) { var15_pages.close(); var15_pages = null; }
				var16_pages = (closure.var5_pages).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var16_pages.moveNext()) {state = 23; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("endPage", ""), com.altova.functions.Core.box(com.altova.functions.Core.substringAfter(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_pages.current()))), "-")));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if( var16_pages != null ) { var16_pages.close(); var16_pages = null; }
				var17_codes = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("codes", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var17_codes.moveNext()) {state = 26; return false; }
				var18_doi = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("doi", ""), ((com.altova.mapforce.IMFNode)(var17_codes.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 30;				
				if( var17_codes != null ) { var17_codes.close(); var17_codes = null; }
				var19_journal = (closure.var2_journal).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var18_doi.moveNext()) {state = 28; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("doi", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_doi.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var18_doi != null ) { var18_doi.close(); var18_doi = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var19_journal.moveNext()) {state = 31; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("title", ""), (new seq6_journalInfo(((com.altova.mapforce.IMFNode)(var19_journal.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 33;				
				if( var19_journal != null ) { var19_journal.close(); var19_journal = null; }
				var20_authors = (closure.var4_authors).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 33;				
				if (!var20_authors.moveNext()) {state = 34; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("authors", ""), (new seq7_map(((com.altova.mapforce.IMFNode)(var20_authors.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if( var20_authors != null ) { var20_authors.close(); var20_authors = null; }
				var21_authors = (closure.var4_authors).enumerator();
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 36;				
				if (!var21_authors.moveNext()) {state = 37; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("affiliationsList", ""), (new seq13_join(((com.altova.mapforce.IMFNode)(var21_authors.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_37() throws Exception {
				state = 39;				
				if( var21_authors != null ) { var21_authors.close(); var21_authors = null; }
				var22_filter = ((new seq15_join(closure.var1_cur))).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 39;				
				if (!var22_filter.moveNext()) {state = 40; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq10_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 39; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("abstract", ""), (new seq17_join(((com.altova.mapforce.IMFNode)(var22_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				var23_files = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("files", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 44;				
				if (!var23_files.moveNext()) {state = 43; return false; }
				var24_file = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("file", ""), ((com.altova.mapforce.IMFNode)(var23_files.current())))).enumerator();
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 0;				
				if( var23_files != null ) { var23_files.close(); var23_files = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("keywords", ""), (new seq19_join(closure.var1_cur)));
				pos++;
				return true;
			}
			private boolean moveNext_44() throws Exception {
				state = 44;				
				if (!var24_file.moveNext()) {state = 45; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("fullTextUrl", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var24_file.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_45() throws Exception {
				state = 42;				
				if( var24_file != null ) { var24_file.close(); var24_file = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_journal != null ) { var6_journal.close(); var6_journal = null; }
				if( var7_journal != null ) { var7_journal.close(); var7_journal = null; }
				if( var9_dateReceived != null ) { var9_dateReceived.close(); var9_dateReceived = null; }
				if( var8_dates != null ) { var8_dates.close(); var8_dates = null; }
				if( var13_pages != null ) { var13_pages.close(); var13_pages = null; }
				if( var15_pages != null ) { var15_pages.close(); var15_pages = null; }
				if( var16_pages != null ) { var16_pages.close(); var16_pages = null; }
				if( var18_doi != null ) { var18_doi.close(); var18_doi = null; }
				if( var17_codes != null ) { var17_codes.close(); var17_codes = null; }
				if( var19_journal != null ) { var19_journal.close(); var19_journal = null; }
				if( var20_authors != null ) { var20_authors.close(); var20_authors = null; }
				if( var21_authors != null ) { var21_authors.close(); var21_authors = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var24_file != null ) { var24_file.close(); var24_file = null; }
				if( var23_files != null ) { var23_files.close(); var23_files = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_journalInfo implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq6_journalInfo(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_journalInfo closure;
			com.altova.mapforce.IMFNode var2_journalInfo;
			public Enumerator(seq6_journalInfo closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_journalInfo = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journalInfo", ""), closure.var1_cur));
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("language", ""), com.altova.functions.Core.box(com.altova.functions.Lang.lowercase(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", ""), var2_journalInfo))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("title", ""), var2_journalInfo)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq7_map(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_map closure;
			IEnumerator var2_author;
			com.altova.mapforce.IEnumerable var3_filter;
			public Enumerator(seq7_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_author = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("author", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_author.moveNext()) {state = 3; return false; }
				var3_filter = new com.altova.functions.Core.SequenceCache((new seq8_filter(((com.altova.mapforce.IMFNode)(var2_author.current())))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("author", ""), (new seq11_join(var3_filter, ((com.altova.mapforce.IMFNode)(var2_author.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_author != null ) { var2_author.close(); var2_author = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_author != null ) { var2_author.close(); var2_author = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq8_filter(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_filter closure;
			IEnumerator var2_individInfo;
			public Enumerator(seq8_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_individInfo = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_individInfo.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq10_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var2_individInfo.current()))))))))) {state = 2; return false; }
				current = var2_individInfo.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_individInfo != null ) { var2_individInfo.close(); var2_individInfo = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_individInfo != null ) { var2_individInfo.close(); var2_individInfo = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq9_map(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_map closure;
			IEnumerator var2_lang;
			public Enumerator(seq9_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_lang = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_lang.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_lang.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_lang != null ) { var2_lang.close(); var2_lang = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_lang != null ) { var2_lang.close(); var2_lang = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_CoreAny implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_sequence;
	
		public seq10_CoreAny(com.altova.mapforce.IEnumerable var1_sequence)
		{
			this.var1_sequence = var1_sequence;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_CoreAny closure;
			IEnumerator var2_enum;
			public Enumerator(seq10_CoreAny closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_enum = (closure.var1_sequence).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_enum.moveNext()) {state = 3; return false; }
				if (!(((Boolean)(var2_enum.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter;
		com.altova.mapforce.IMFNode var2_cur;
	
		public seq11_join(com.altova.mapforce.IEnumerable var1_filter, com.altova.mapforce.IMFNode var2_cur)
		{
			this.var1_filter = var1_filter;
			this.var2_cur = var2_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_join closure;
			IEnumerator var3_filter;
			com.altova.mapforce.IMFNode var4_create_element_qname;
			IEnumerator var5_surname;
			IEnumerator var7_filter;
			IEnumerator var6_initials;
			IEnumerator var8_email;
			IEnumerator var9_num;
			public Enumerator(seq11_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_filter).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				var4_create_element_qname = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("individInfo", ""), (new seq12_join(((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				var5_surname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("surname", ""), var4_create_element_qname)).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var7_filter = (closure.var1_filter).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_surname.moveNext()) {state = 5; return false; }
				var6_initials = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("initials", ""), var4_create_element_qname)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_surname != null ) { var5_surname.close(); var5_surname = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_initials.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("name", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_surname.current()))), " "), com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_initials.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_initials != null ) { var6_initials.close(); var6_initials = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				var8_email = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("email", ""), com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("individInfo", ""), (new seq12_join(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 14;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_num = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("num", ""), closure.var2_cur)).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var8_email.moveNext()) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("email", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_email.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_email != null ) { var8_email.close(); var8_email = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var9_num.moveNext()) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("affiliationId", ""), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_num.current())))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				if( var9_num != null ) { var9_num.close(); var9_num = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_initials != null ) { var6_initials.close(); var6_initials = null; }
				if( var5_surname != null ) { var5_surname.close(); var5_surname = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var8_email != null ) { var8_email.close(); var8_email = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var9_num != null ) { var9_num.close(); var9_num = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq12_join(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_join closure;
			IEnumerator var2_surname;
			IEnumerator var3_initials;
			IEnumerator var4_orgName;
			IEnumerator var5_email;
			public Enumerator(seq12_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_surname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("surname", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_surname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("surname", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_surname.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var2_surname != null ) { var2_surname.close(); var2_surname = null; }
				var3_initials = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("initials", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var3_initials.moveNext()) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("initials", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_initials.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var3_initials != null ) { var3_initials.close(); var3_initials = null; }
				var4_orgName = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("orgName", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var4_orgName.moveNext()) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("orgName", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_orgName.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var4_orgName != null ) { var4_orgName.close(); var4_orgName = null; }
				var5_email = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("email", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var5_email.moveNext()) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("email", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_email.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var5_email != null ) { var5_email.close(); var5_email = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_surname != null ) { var2_surname.close(); var2_surname = null; }
				if( var3_initials != null ) { var3_initials.close(); var3_initials = null; }
				if( var4_orgName != null ) { var4_orgName.close(); var4_orgName = null; }
				if( var5_email != null ) { var5_email.close(); var5_email = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq13_join(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_join closure;
			IEnumerator var2_author;
			IEnumerator var3_individInfo;
			IEnumerator var4_orgName;
			public Enumerator(seq13_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_author = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("author", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_author.moveNext()) {state = 3; return false; }
				var3_individInfo = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", ""), ((com.altova.mapforce.IMFNode)(var2_author.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_author != null ) { var2_author.close(); var2_author = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_individInfo.moveNext()) {state = 5; return false; }
				var4_orgName = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("orgName", ""), ((com.altova.mapforce.IMFNode)(var3_individInfo.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_individInfo != null ) { var3_individInfo.close(); var3_individInfo = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_orgName.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("affiliationName", ""), (new seq14_join(((com.altova.mapforce.IMFNode)(var2_author.current())), ((com.altova.mapforce.IMFNode)(var4_orgName.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_orgName != null ) { var4_orgName.close(); var4_orgName = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_orgName != null ) { var4_orgName.close(); var4_orgName = null; }
				if( var3_individInfo != null ) { var3_individInfo.close(); var3_individInfo = null; }
				if( var2_author != null ) { var2_author.close(); var2_author = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
		com.altova.mapforce.IMFNode var2_cur;
	
		public seq14_join(com.altova.mapforce.IMFNode var1_cur, com.altova.mapforce.IMFNode var2_cur)
		{
			this.var1_cur = var1_cur;
			this.var2_cur = var2_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_join closure;
			IEnumerator var3_num;
			public Enumerator(seq14_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_num = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("num", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_num.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("affiliationId", ""), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_num.current())))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_num != null ) { var3_num.close(); var3_num = null; }
				current = com.altova.CoreTypes.nodeToString(closure.var2_cur);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_num != null ) { var3_num.close(); var3_num = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq15_join(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_join closure;
			IEnumerator var2_abstracts;
			IEnumerator var3_abstract;
			public Enumerator(seq15_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_abstracts = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("abstracts", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_abstracts.moveNext()) {state = 3; return false; }
				var3_abstract = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("abstract", ""), ((com.altova.mapforce.IMFNode)(var2_abstracts.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_abstracts != null ) { var2_abstracts.close(); var2_abstracts = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_abstract.moveNext()) {state = 5; return false; }
				current = var3_abstract.current();
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_abstract != null ) { var3_abstract.close(); var3_abstract = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_abstract != null ) { var3_abstract.close(); var3_abstract = null; }
				if( var2_abstracts != null ) { var2_abstracts.close(); var2_abstracts = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq16_map(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16_map closure;
			IEnumerator var2_lang;
			public Enumerator(seq16_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_lang = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_lang.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_lang.current()))), "ENG");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_lang != null ) { var2_lang.close(); var2_lang = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_lang != null ) { var2_lang.close(); var2_lang = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq17_join(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_join closure;
			com.altova.mapforce.IMFNode var2_create_element_qname;
			IEnumerator var3_lang;
			public Enumerator(seq17_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_create_element_qname = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("abstract", ""), (new seq18_join(closure.var1_cur)));
				var3_lang = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", ""), var2_create_element_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_lang.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("language", ""), com.altova.functions.Core.box(com.altova.functions.Lang.lowercase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_lang.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_lang != null ) { var3_lang.close(); var3_lang = null; }
				current = com.altova.CoreTypes.nodeToString(var2_create_element_qname);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_lang != null ) { var3_lang.close(); var3_lang = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq18_join(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18_join closure;
			IEnumerator var2_select_attributes;
			IEnumerator var3_select_children;
			public Enumerator(seq18_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_select_attributes = (com.altova.functions.Core.selectAttributes(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_select_attributes.moveNext()) {state = 3; return false; }
				current = var2_select_attributes.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var2_select_attributes != null ) { var2_select_attributes.close(); var2_select_attributes = null; }
				var3_select_children = (com.altova.functions.Core.selectChildren(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var3_select_children.moveNext()) {state = 6; return false; }
				current = var3_select_children.current();
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_select_children != null ) { var3_select_children.close(); var3_select_children = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_select_attributes != null ) { var2_select_attributes.close(); var2_select_attributes = null; }
				if( var3_select_children != null ) { var3_select_children.close(); var3_select_children = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq19_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur;
	
		public seq19_join(com.altova.mapforce.IMFNode var1_cur)
		{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq19_join closure;
			IEnumerator var2_keywords;
			IEnumerator var3_kwdGroup;
			IEnumerator var4_keyword;
			public Enumerator(seq19_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_keywords = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("keywords", ""), closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_keywords.moveNext()) {state = 3; return false; }
				var3_kwdGroup = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("kwdGroup", ""), ((com.altova.mapforce.IMFNode)(var2_keywords.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_keywords != null ) { var2_keywords.close(); var2_keywords = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_kwdGroup.moveNext()) {state = 5; return false; }
				var4_keyword = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("keyword", ""), ((com.altova.mapforce.IMFNode)(var3_kwdGroup.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_kwdGroup != null ) { var3_kwdGroup.close(); var3_kwdGroup = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_keyword.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("keyword", ""), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_keyword.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_keyword != null ) { var4_keyword.close(); var4_keyword = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_keyword != null ) { var4_keyword.close(); var4_keyword = null; }
				if( var3_kwdGroup != null ) { var3_kwdGroup.close(); var3_kwdGroup = null; }
				if( var2_keywords != null ) { var2_keywords.close(); var2_keywords = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class Outer implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_25420429_2017_17_3_unicode_Instance;
	
		public Outer(com.altova.mapforce.IMFNode var1_25420429_2017_17_3_unicode_Instance)
		{
			this.var1_25420429_2017_17_3_unicode_Instance = var1_25420429_2017_17_3_unicode_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_journal;
			public Enumerator(Outer closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_journal = ((new main(closure.var1_25420429_2017_17_3_unicode_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_journal.moveNext()) {state = 3; return false; }
				current = var2_journal.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_journal != null ) { var2_journal.close(); var2_journal = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_journal != null ) { var2_journal.close(); var2_journal = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varName25420429_2017_17_3_unicode2Instance;

	public void run(String Name25420429_2017_17_3_unicode2SourceFilename, String doajArticles2TargetFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + Name25420429_2017_17_3_unicode2SourceFilename + "...\n");
		com.altova.io.FileInput Name25420429_2017_17_3_unicode2Source = new com.altova.io.FileInput(Name25420429_2017_17_3_unicode2SourceFilename);
		// open target stream
		com.altova.io.FileOutput doajArticles2Target = new com.altova.io.FileOutput(doajArticles2TargetFilename);

		// run
	
		run(Name25420429_2017_17_3_unicode2Source, doajArticles2Target);

		// close source streams
		Name25420429_2017_17_3_unicode2Source.close();
		// close target stream
		writeTrace("Saving " + doajArticles2TargetFilename + "...\n");
		doajArticles2Target.close();
	}


	// main entry point

	public void run(com.altova.io.Input Name25420429_2017_17_3_unicode2Source, com.altova.io.Output doajArticles2Target) throws Exception {
		// Open the source(s)
		org.w3c.dom.Document doc_Name25420429_2017_17_3_unicode2 = XmlTreeOperations.loadDocument(Name25420429_2017_17_3_unicode2Source);
		varName25420429_2017_17_3_unicode2Instance = doc_Name25420429_2017_17_3_unicode2;
		if (runDoesCloseAll)
			Name25420429_2017_17_3_unicode2Source.close();

		// Create the target
		org.w3c.dom.Document doajArticles2Doc = (doajArticles2Target.getType() == com.altova.io.Output.IO_DOM) ? doajArticles2Target.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		main mapping = new main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varName25420429_2017_17_3_unicode2Instance, Name25420429_2017_17_3_unicode2Source.getFilename()));

		com.altova.xml.MFDOMWriter.write(mapping, doajArticles2Doc);
		// Close the target
		XmlTreeOperations.saveDocument(doajArticles2Doc, doajArticles2Target, "UTF-8", false, false, true, false);

		
		if (runDoesCloseAll)
		{
			Name25420429_2017_17_3_unicode2Source.close();
			doajArticles2Target.close();
		}
	}



}
