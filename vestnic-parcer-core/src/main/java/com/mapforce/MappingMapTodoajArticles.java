/**
 * MappingMapTodoajArticles.java
 *
 * This file was generated by MapForce 2011r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import java.util.*;

public class MappingMapTodoajArticles extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = false;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class seq1_Main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_instance_Name25420429_2017_17_3_unicode;
	
		public seq1_Main(com.altova.mapforce.IMFNode var1_instance_Name25420429_2017_17_3_unicode)
		{
			this.var1_instance_Name25420429_2017_17_3_unicode = var1_instance_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_Main closure;
			String var2_const_;
			public Enumerator(seq1_Main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_ = "";
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("records", var2_const_), var2_const_, (new seq2_create_element_with_prefix(closure.var1_instance_Name25420429_2017_17_3_unicode)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode;
	
		public seq2_create_element_with_prefix(com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode)
		{
			this.var1_Name25420429_2017_17_3_unicode = var1_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_create_element_with_prefix closure;
			String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq2_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var3_const_), closure.var1_Name25420429_2017_17_3_unicode));
				current = com.altova.functions.Core.createNamespace("iso_639-2b", "http://www.doaj.org/schemas/iso_639-2b/1.0");
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), "xsi", com.altova.functions.Core.box("C:/Users/test-1/Desktop/doajArticles.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 11;				
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("article", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("articles", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))))))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var2_map_filter_elements.moveNext()) {state = 12; return false; }
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artType", var3_const_), ((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current()))))), "RAR"))) {state = 11; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("record", var3_const_), var3_const_, (new seq3_create_element_with_prefix(closure.var1_Name25420429_2017_17_3_unicode, ((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var4_Name25420429_2017_17_3_unicode;
		com.altova.mapforce.IMFNode var6_cur_filter_elements;
	
		public seq3_create_element_with_prefix(com.altova.mapforce.IMFNode var4_Name25420429_2017_17_3_unicode, com.altova.mapforce.IMFNode var6_cur_filter_elements)
		{
			this.var4_Name25420429_2017_17_3_unicode = var4_Name25420429_2017_17_3_unicode;
			this.var6_cur_filter_elements = var6_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_create_element_with_prefix closure;
			String var13_const__;
			com.altova.mapforce.IEnumerable var2_const_Vestnik_Novosibirsk_;
			String var1_const_;
			com.altova.mapforce.IEnumerable var22_filter_elements;
			com.altova.mapforce.IMFNode var19_filter_elements;
			com.altova.mapforce.IEnumerable var17_filter_elements;
			String var12_cast;
			String var15_substring_after;
			String var14_substring_before;
			com.altova.mapforce.IEnumerable var7_filter_elements;
			javax.xml.namespace.QName var3_create_qname;
			com.altova.mapforce.IEnumerable var5_cast;
			double var11_;
			String var10_const__;
			double var9_;
			String var8_cast;
			javax.xml.namespace.QName var18_create_qname;
			IEnumerator var16_map_filter_elements;
			String var21_const__;
			com.altova.mapforce.IMFNode var20_filter_elements;
			public Enumerator(seq3_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var13_const__ = "-";
				var2_const_Vestnik_Novosibirsk_ = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box("Vestnik Novosibirsk State University"));
				var1_const_ = "";
				var22_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("files", var1_const_), closure.var6_cur_filter_elements));
				var19_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var1_const_), closure.var4_Name25420429_2017_17_3_unicode));
				var17_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("abstracts", var1_const_), closure.var6_cur_filter_elements));
				var12_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("pages", var1_const_), closure.var6_cur_filter_elements)));
				var15_substring_after = com.altova.functions.Core.substringAfter(var12_cast, var13_const__);
				var14_substring_before = com.altova.functions.Core.substringBefore(var12_cast, var13_const__);
				var7_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dates", var1_const_), closure.var6_cur_filter_elements));
				var3_create_qname = com.altova.functions.Core.createQName("issn", var1_const_);
				var5_cast = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var3_create_qname, var19_filter_elements)))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("language", var1_const_), var1_const_, com.altova.functions.Core.box("rus"));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("publisher", var1_const_), var1_const_, var2_const_Vestnik_Novosibirsk_);
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("journalTitle", var1_const_), var1_const_, var2_const_Vestnik_Novosibirsk_);
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElementWithPrefix(var3_create_qname, var1_const_, var5_cast);
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("eissn", var1_const_), var1_const_, var5_cast);
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!(com.altova.functions.Core.exists(var7_filter_elements))) {state = 11; return false; }
				var11_ = com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("2"));
				var10_const__ = "-";
				var9_ = com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("4"));
				var8_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateReceived", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var7_filter_elements))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("publicationDate", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.substring(var8_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("7")), var9_), var10_const__), com.altova.functions.Core.substring(var8_cast, var9_, var11_)), var10_const__), com.altova.functions.Core.substring(var8_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("1")), var11_))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("volume", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.subtract(com.altova.CoreTypes.parseDecimal(var15_substring_after), com.altova.CoreTypes.parseDecimal(var14_substring_before)))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 18;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("startPage", var1_const_), var1_const_, com.altova.functions.Core.box(var14_substring_before));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 19;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("endPage", var1_const_), var1_const_, com.altova.functions.Core.box(var15_substring_after));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("codes", var1_const_), closure.var6_cur_filter_elements)))) {state = 21; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("doi", var1_const_), var1_const_, com.altova.functions.Core.box((String)com.altova.functions.Core.first((new seq4_cond_concat(closure.var6_cur_filter_elements, closure.var4_Name25420429_2017_17_3_unicode)))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 27;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("title", var1_const_), var1_const_, (new seq5_create_element_with_prefix(closure.var4_Name25420429_2017_17_3_unicode)));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 28;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("authors", var1_const_), var1_const_, (new seq6_cond_map_filter_elements(closure.var6_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 29;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("affiliationsList", var1_const_), var1_const_, (new seq12_cond_map_filter_elements(closure.var6_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_29() throws Exception {
				state = 34;				
				if (!(com.altova.functions.Core.exists(var17_filter_elements))) {state = 31; return false; }
				var18_create_qname = com.altova.functions.Core.createQName("abstract", var1_const_);
				var16_map_filter_elements = (com.altova.functions.Core.filterElements(var18_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var17_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 49;				
				if (!(com.altova.functions.Core.exists(var22_filter_elements))) {state = 48; return false; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var16_map_filter_elements.moveNext()) {state = 35; return false; }
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), ((com.altova.mapforce.IMFNode)(var16_map_filter_elements.current()))))), "ENG"))) {state = 34; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var18_create_qname, var1_const_, (new seq14_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var16_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 31;				
				var16_map_filter_elements.close(); var16_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("keywords", var1_const_), var1_const_, (new seq15_cond_map_filter_elements(closure.var6_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_49() throws Exception {
				state = 48;				
				var21_const__ = "_";
				var20_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var1_const_), var19_filter_elements));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("fullTextUrl", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Core.concat("https://nsu.ru/ef/vestnik_ngu_ef/", com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var1_const_), var20_filter_elements)))))))))), var21_const__), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("number", var1_const_), var20_filter_elements))))))))))), var21_const__), com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.functions.Core.substringBefore(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("file", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var22_filter_elements)))), ".")))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var16_map_filter_elements.close(); var16_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_cond_concat implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
		com.altova.mapforce.IMFNode var3_Name25420429_2017_17_3_unicode;
	
		public seq4_cond_concat(com.altova.mapforce.IMFNode var1_cur_filter_elements, com.altova.mapforce.IMFNode var3_Name25420429_2017_17_3_unicode)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
			this.var3_Name25420429_2017_17_3_unicode = var3_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_cond_concat closure;
			String var2_const_;
			String var5_const__;
			com.altova.mapforce.IMFNode var4_filter_elements;
			public Enumerator(seq4_cond_concat closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_ = "";
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("codes", var2_const_), closure.var1_cur_filter_elements)))) {state = 0; return false; }
				var5_const__ = "-";
				var4_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var2_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var2_const_), closure.var3_Name25420429_2017_17_3_unicode))));
				current = com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat("10.25205/2542-0429-", com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var2_const_), var4_filter_elements))))))))))), var5_const__), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("volume", var2_const_), var4_filter_elements))))))))))), var5_const__), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("number", var2_const_), var4_filter_elements))))))))))), var5_const__), com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("pages", var2_const_), closure.var1_cur_filter_elements))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
	
		public seq5_create_element_with_prefix(com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode)
		{
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_create_element_with_prefix closure;
			String var1_const_;
			com.altova.mapforce.IMFNode var3_filter_elements;
			public Enumerator(seq5_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = "";
				var3_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journalInfo", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var1_const_), closure.var2_Name25420429_2017_17_3_unicode))));
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("language", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Lang.lowercase(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), var3_filter_elements))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("title", var1_const_), var3_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq6_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_cond_map_filter_elements closure;
			String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq6_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("authors", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("author", var3_const_);
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(var5_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				if (!(com.altova.functions.Core.exists((new seq7_map_map_filter_elements(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current()))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var5_create_qname, var3_const_, (new seq9_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_map_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq7_map_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_map_map_filter_elements closure;
			IEnumerator var1_map_map_filter_elements;
			public Enumerator(seq7_map_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_map_filter_elements = ((new seq8_map_filter_elements(closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(((Boolean)(var1_map_map_filter_elements.current())))) {state = 5; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq8_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_map_filter_elements closure;
			String var3_const_;
			IEnumerator var1_map_filter_elements;
			public Enumerator(seq8_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var1_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				current = com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq9_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_create_element_with_prefix closure;
			String var3_const_;
			com.altova.mapforce.IEnumerable var5_filter_elements;
			IEnumerator var1_map_filter_elements;
			IEnumerator var4_map_filter_elements;
			public Enumerator(seq9_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var5_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements));
				var1_map_filter_elements = (var5_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current())))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("name", var3_const_), var3_const_, com.altova.functions.Core.box((String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("surname", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))))), " "), com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("initials", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 16;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				var4_map_filter_elements = (var5_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var4_map_filter_elements.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq10_if_equal(((com.altova.mapforce.IMFNode)(var4_map_filter_elements.current()))))))) {state = 16; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("email", var3_const_), var3_const_, com.altova.functions.Core.box((String)com.altova.functions.Core.first((new seq11_cond_map_filter_elements(((com.altova.mapforce.IMFNode)(var4_map_filter_elements.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 0;				
				var4_map_filter_elements.close(); var4_map_filter_elements = null;
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("affiliationId", var3_const_), var3_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("num", var3_const_), closure.var2_cur_filter_elements))))))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				var4_map_filter_elements.close(); var4_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq10_if_equal(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_if_equal closure;
			String var2_const_;
			public Enumerator(seq10_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_ = "";
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var2_const_), closure.var1_cur_filter_elements)))))) {state = 11; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("email", var2_const_), closure.var1_cur_filter_elements));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq11_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_cond_map_filter_elements closure;
			String var3_const_;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq11_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), closure.var1_cur_filter_elements)))))) {state = 0; return false; }
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("email", var3_const_), closure.var1_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq12_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_cond_map_filter_elements closure;
			String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			IEnumerator var2_map_filter_elements;
			IEnumerator var5_map_filter_elements;
			public Enumerator(seq12_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("authors", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("author", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				var5_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), ((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var5_map_filter_elements.moveNext()) {state = 14; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("affiliationName", var3_const_), var3_const_, (new seq13_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())), ((com.altova.mapforce.IMFNode)(var5_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 9;				
				var5_map_filter_elements.close(); var5_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var5_map_filter_elements.close(); var5_map_filter_elements = null;
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
	
		public seq13_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements, com.altova.mapforce.IMFNode var3_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_create_element_with_prefix closure;
			String var1_const_;
			public Enumerator(seq13_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = "";
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("affiliationId", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("num", var1_const_), closure.var2_cur_filter_elements))))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("orgName", var1_const_), closure.var3_cur_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq14_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_create_element_with_prefix closure;
			String var1_const_;
			public Enumerator(seq14_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = "";
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("language", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Lang.lowercase(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), closure.var2_cur_filter_elements))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.nodeToString(closure.var2_cur_filter_elements);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq15_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_cond_map_filter_elements closure;
			String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq15_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("keywords", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("keyword", var3_const_);
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(var5_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("kwdGroup", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var5_create_qname, var3_const_, com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varName25420429_2017_17_3_unicode2Instance;

	public void run(String Name25420429_2017_17_3_unicode2SourceFilename, String doajArticlesTargetFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + Name25420429_2017_17_3_unicode2SourceFilename + "...\n");
		com.altova.io.FileInput Name25420429_2017_17_3_unicode2Source = new com.altova.io.FileInput(Name25420429_2017_17_3_unicode2SourceFilename);
		// open target stream
		com.altova.io.FileOutput doajArticlesTarget = new com.altova.io.FileOutput(doajArticlesTargetFilename);

		// run
		run(Name25420429_2017_17_3_unicode2Source, doajArticlesTarget);

		// close source streams
		Name25420429_2017_17_3_unicode2Source.close();
		// close target stream
		writeTrace("Saving " + doajArticlesTargetFilename + "...\n");
		doajArticlesTarget.close();
	}


	// main entry point

	public void run(com.altova.io.Input Name25420429_2017_17_3_unicode2Source, com.altova.io.Output doajArticlesTarget) throws Exception {
		// Open the source(s)
		org.w3c.dom.Document doc_Name25420429_2017_17_3_unicode2 = XmlTreeOperations.loadDocument(Name25420429_2017_17_3_unicode2Source);
		varName25420429_2017_17_3_unicode2Instance = doc_Name25420429_2017_17_3_unicode2;
		Name25420429_2017_17_3_unicode2Source.close();

		// Create the target
		org.w3c.dom.Document doajArticles2Doc = (doajArticlesTarget.getType() == com.altova.io.Output.IO_DOM) ? doajArticlesTarget.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		seq1_Main mapping = new seq1_Main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varName25420429_2017_17_3_unicode2Instance, Name25420429_2017_17_3_unicode2Source.getFilename()));

		com.altova.xml.MFDOMWriter.write(mapping, doajArticles2Doc);
		// Close the target
		XmlTreeOperations.saveDocument(doajArticles2Doc, doajArticlesTarget, "UTF-8", false, false, true);

		
		if (runDoesCloseAll)
		{
			Name25420429_2017_17_3_unicode2Source.close();
			doajArticlesTarget.close();
		}
	}



}
