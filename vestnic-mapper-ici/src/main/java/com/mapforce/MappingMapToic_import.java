/**
 * MappingMapToic_import.java
 *
 * This file was generated by MapForce 2011r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import java.util.*;

public class MappingMapToic_import extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = false;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class seq1_Main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_instance_Name25420429_2017_17_3_unicode;
	
		public seq1_Main(com.altova.mapforce.IMFNode var1_instance_Name25420429_2017_17_3_unicode)
		{
			this.var1_instance_Name25420429_2017_17_3_unicode = var1_instance_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_Main closure;
			java.lang.String var2_const_;
			public Enumerator(seq1_Main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_ = "";
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("ici-import", var2_const_), var2_const_, (new seq2_create_element_with_prefix(closure.var1_instance_Name25420429_2017_17_3_unicode)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
	
		public seq2_create_element_with_prefix(com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode)
		{
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_create_element_with_prefix closure;
			java.lang.String var1_const_;
			public Enumerator(seq2_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = "";
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("journal", var1_const_), var1_const_, (new seq3_cond_create_attribute_with_prefix(closure.var2_Name25420429_2017_17_3_unicode)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("issue", var1_const_), var1_const_, (new seq4_create_element_with_prefix(closure.var2_Name25420429_2017_17_3_unicode)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_cond_create_attribute_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode;
	
		public seq3_cond_create_attribute_with_prefix(com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode)
		{
			this.var1_Name25420429_2017_17_3_unicode = var1_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_cond_create_attribute_with_prefix closure;
			java.lang.String var2_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			javax.xml.namespace.QName var3_create_qname;
			public Enumerator(seq3_cond_create_attribute_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var2_const_), closure.var1_Name25420429_2017_17_3_unicode));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var3_create_qname = com.altova.functions.Core.createQName("issn", var2_const_);
				current = com.altova.functions.Core.createAttributeWithPrefix(var3_create_qname, var2_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var3_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode;
	
		public seq4_create_element_with_prefix(com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode)
		{
			this.var1_Name25420429_2017_17_3_unicode = var1_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_create_element_with_prefix closure;
			java.lang.String var2_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			boolean var9_exists;
			java.lang.String var8_replace;
			com.altova.mapforce.IMFNode var6_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			javax.xml.namespace.QName var3_create_qname;
			java.math.BigInteger var7_;
			javax.xml.namespace.QName var11_create_qname;
			IEnumerator var10_map_filter_elements;
			public Enumerator(seq4_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var2_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var2_const_), closure.var1_Name25420429_2017_17_3_unicode));
				var9_exists = com.altova.functions.Core.exists(var4_filter_elements);
				if (!(var9_exists)) {state = 6; return false; }
				var8_replace = com.altova.functions.Lang.replace((java.lang.String)com.altova.functions.Core.first((new seq5_if_equal(closure.var1_Name25420429_2017_17_3_unicode))), " ", (java.lang.String)com.altova.functions.Core.first((new seq6_if_equal(closure.var1_Name25420429_2017_17_3_unicode))));
				var6_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var2_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements)));
				var5_create_qname = com.altova.functions.Core.createQName("volume", var2_const_);
				var3_create_qname = com.altova.functions.Core.createQName("number", var2_const_);
				var7_ = com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var3_create_qname, var6_filter_elements)))))))));
				current = com.altova.functions.Core.createAttributeWithPrefix(var3_create_qname, var2_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(var7_)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("coverUrl", var2_const_), var2_const_, com.altova.functions.Core.box("https://www.nsu.ru/rs/mw/link/Image:300px-/66436/%D0%BE%D0%B1%D0%BB%D0%BE%D0%B6%D0%BA%D0%B0_%D1%87%D0%B8%D1%81%D1%82%D0%B0%D1%8F.jpg"));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = com.altova.functions.Core.createAttributeWithPrefix(var5_create_qname, var2_const_, com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var5_create_qname, var6_filter_elements)))))))))), " ("), com.altova.CoreTypes.integerToString(var7_)), ")")));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("year", var2_const_), var2_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var2_const_), var6_filter_elements))))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("publicationDate", var2_const_), var2_const_, com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.CoreTypes.parseDateTime(var8_replace))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("coverDate", var2_const_), var2_const_, com.altova.functions.Core.box(var8_replace));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("electronicContentPdfUrl", var2_const_), var2_const_, com.altova.functions.Core.box("https://www.nsu.ru/ef/vestnik_ngu_ef/"));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 22;				
				if (!(var9_exists)) {state = 0; return false; }
				var11_create_qname = com.altova.functions.Core.createQName("article", var2_const_);
				var10_map_filter_elements = (com.altova.functions.Core.filterElements(var11_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("articles", var2_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var2_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))))))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var10_map_filter_elements.moveNext()) {state = 23; return false; }
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artType", var2_const_), ((com.altova.mapforce.IMFNode)(var10_map_filter_elements.current()))))), "RAR"))) {state = 22; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var11_create_qname, var2_const_, (new seq7_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var10_map_filter_elements.current())), closure.var1_Name25420429_2017_17_3_unicode)));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 0;				
				var10_map_filter_elements.close(); var10_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var10_map_filter_elements.close(); var10_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
	
		public seq5_if_equal(com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode)
		{
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_if_equal closure;
			java.math.BigDecimal var6_const_1;
			java.lang.String var1_const_;
			com.altova.mapforce.IMFNode var8_filter_elements;
			javax.xml.namespace.QName var7_create_qname;
			java.lang.String var3_cast;
			java.math.BigDecimal var5_const_6;
			double var4_;
			public Enumerator(seq5_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var6_const_1 = new java.math.BigDecimal("1");
				var1_const_ = "";
				var8_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("operCard", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var1_const_), closure.var2_Name25420429_2017_17_3_unicode))));
				var7_create_qname = com.altova.functions.Core.createQName("date", var1_const_);
				var3_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var7_create_qname, var8_filter_elements)));
				if (!(com.altova.functions.Core.equal("-", com.altova.functions.Core.substring(var3_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("7")), com.altova.CoreTypes.decimalToDouble(var6_const_1))))) {state = 11; return false; }
				var5_const_6 = new java.math.BigDecimal("6");
				var4_ = com.altova.CoreTypes.decimalToDouble(var5_const_6);
				current = com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.substring(var3_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("0")), var4_), "0"), com.altova.functions.Core.substring(var3_cast, var4_, com.altova.CoreTypes.decimalToDouble(com.altova.functions.Core.subtract(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.functions.Core.stringLength(var3_cast)))), com.altova.functions.Core.subtract(var5_const_6, var6_const_1)))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var7_create_qname, var8_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode;
	
		public seq6_if_equal(com.altova.mapforce.IMFNode var1_Name25420429_2017_17_3_unicode)
		{
			this.var1_Name25420429_2017_17_3_unicode = var1_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_if_equal closure;
			public Enumerator(seq6_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.functions.Core.stringLength((java.lang.String)com.altova.functions.Core.first((new seq5_if_equal(closure.var1_Name25420429_2017_17_3_unicode))))))), new java.math.BigDecimal("18")))) {state = 11; return false; }
				current = "T0";
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = "T";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
		com.altova.mapforce.IMFNode var3_Name25420429_2017_17_3_unicode;
	
		public seq7_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements, com.altova.mapforce.IMFNode var3_Name25420429_2017_17_3_unicode)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
			this.var3_Name25420429_2017_17_3_unicode = var3_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_create_element_with_prefix closure;
			java.lang.String var1_const_;
			javax.xml.namespace.QName var4_create_qname;
			public Enumerator(seq7_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = "";
				var4_create_qname = com.altova.functions.Core.createQName("languageVersion", var1_const_);
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("type", var1_const_), var1_const_, com.altova.functions.Core.box("ORIGINAL_ARTICLE"));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElementWithPrefix(var4_create_qname, var1_const_, (new seq8_create_element_with_prefix(closure.var2_cur_filter_elements, closure.var3_Name25420429_2017_17_3_unicode)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createElementWithPrefix(var4_create_qname, var1_const_, (new seq12_create_element_with_prefix(closure.var2_cur_filter_elements, closure.var3_Name25420429_2017_17_3_unicode)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("authors", var1_const_), var1_const_, (new seq14_cond_map_filter_elements(closure.var2_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("references", var1_const_), var1_const_, (new seq26_cond_map_filter_elements(closure.var2_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("disciplineSciences", var1_const_), var1_const_, (new seq30_create_element_with_prefix()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
		com.altova.mapforce.IMFNode var8_Name25420429_2017_17_3_unicode;
	
		public seq8_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements, com.altova.mapforce.IMFNode var8_Name25420429_2017_17_3_unicode)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
			this.var8_Name25420429_2017_17_3_unicode = var8_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_create_element_with_prefix closure;
			java.lang.String var19_const__;
			java.lang.String var1_const_;
			java.lang.String var18_cast;
			com.altova.mapforce.IEnumerable var12_filter_elements;
			com.altova.mapforce.IEnumerable var11_filter_elements;
			com.altova.mapforce.IEnumerable var6_filter_elements;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			IEnumerator var3_map_filter_elements;
			javax.xml.namespace.QName var7_create_qname;
			IEnumerator var5_map_filter_elements;
			java.lang.String var10_const__;
			com.altova.mapforce.IMFNode var9_filter_elements;
			double var16_;
			java.lang.String var15_const__;
			double var14_;
			java.lang.String var13_cast;
			com.altova.mapforce.IEnumerable var17_cast;
			public Enumerator(seq8_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
					case 51:	if (moveNext_51()) return true; break;
					case 55:	if (moveNext_55()) return true; break;
					case 56:	if (moveNext_56()) return true; break;
					case 58:	if (moveNext_58()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var19_const__ = "-";
				var1_const_ = "";
				var18_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("pages", var1_const_), closure.var2_cur_filter_elements)));
				var12_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dates", var1_const_), closure.var2_cur_filter_elements));
				var11_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("files", var1_const_), closure.var2_cur_filter_elements));
				var6_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("abstracts", var1_const_), closure.var2_cur_filter_elements));
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artTitles", var1_const_), closure.var2_cur_filter_elements));
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("language", var1_const_), var1_const_, com.altova.functions.Core.box("RU"));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 10;				
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 7; return false; }
				var3_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artTitle", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 25;				
				if (!(com.altova.functions.Core.exists(var6_filter_elements))) {state = 24; return false; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var3_map_filter_elements.moveNext()) {state = 11; return false; }
				if (!(com.altova.functions.Core.equal("RUS", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), ((com.altova.mapforce.IMFNode)(var3_map_filter_elements.current())))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("title", var1_const_), var1_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_map_filter_elements.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 7;				
				var3_map_filter_elements.close(); var3_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 42;				
				if (!(com.altova.functions.Core.exists(var11_filter_elements))) {state = 41; return false; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				var7_create_qname = com.altova.functions.Core.createQName("abstract", var1_const_);
				var5_map_filter_elements = (com.altova.functions.Core.filterElements(var7_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var6_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var5_map_filter_elements.moveNext()) {state = 28; return false; }
				if (!(com.altova.functions.Core.equal("RUS", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), ((com.altova.mapforce.IMFNode)(var5_map_filter_elements.current())))))))) {state = 27; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var7_create_qname, var1_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_map_filter_elements.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 24;				
				var5_map_filter_elements.close(); var5_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 49;				
				if (!(com.altova.functions.Core.exists(var12_filter_elements))) {state = 48; return false; }
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 41;				
				var10_const__ = "_";
				var9_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var1_const_), closure.var8_Name25420429_2017_17_3_unicode))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("pdfFileUrl", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.functions.Core.concat("https://nsu.ru/ef/vestnik_ngu_ef/", com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var1_const_), var9_filter_elements)))))))))), var10_const__), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("number", var1_const_), var9_filter_elements))))))))))), var10_const__), com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.functions.Core.substringBefore(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("file", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var11_filter_elements)))), ".")))))));
				pos++;
				return true;
			}
			private boolean moveNext_48() throws Exception {
				state = 55;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("pageFrom", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.functions.Core.substringBefore(var18_cast, var19_const__)))));
				pos++;
				return true;
			}
			private boolean moveNext_49() throws Exception {
				state = 51;				
				var16_ = com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("2"));
				var15_const__ = "-";
				var14_ = com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("4"));
				var13_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateReceived", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var12_filter_elements))));
				var17_cast = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.CoreTypes.parseDateTime(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.substring(var13_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("7")), var14_), var15_const__), com.altova.functions.Core.substring(var13_cast, var14_, var16_)), var15_const__), com.altova.functions.Core.substring(var13_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("1")), var16_)), "T00:00:00")))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("publicationDate", var1_const_), var1_const_, var17_cast);
				pos++;
				return true;
			}
			private boolean moveNext_51() throws Exception {
				state = 48;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("registrationDate", var1_const_), var1_const_, var17_cast);
				pos++;
				return true;
			}
			private boolean moveNext_55() throws Exception {
				state = 56;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("pageTo", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.functions.Core.substringAfter(var18_cast, var19_const__)))));
				pos++;
				return true;
			}
			private boolean moveNext_56() throws Exception {
				state = 58;				
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("codes", var1_const_), closure.var2_cur_filter_elements)))) {state = 58; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("doi", var1_const_), var1_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first((new seq9_cond_concat(closure.var2_cur_filter_elements, closure.var8_Name25420429_2017_17_3_unicode)))));
				pos++;
				return true;
			}
			private boolean moveNext_58() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("keywords", var1_const_), var1_const_, (new seq11_cond_map_filter_elements(closure.var2_cur_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var3_map_filter_elements.close(); var3_map_filter_elements = null;
				var5_map_filter_elements.close(); var5_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_cond_concat implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
	
		public seq9_cond_concat(com.altova.mapforce.IMFNode var1_cur_filter_elements, com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_cond_concat closure;
			java.lang.String var3_const_;
			java.lang.String var5_const__;
			com.altova.mapforce.IMFNode var4_filter_elements;
			public Enumerator(seq9_cond_concat closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var3_const_ = "";
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("codes", var3_const_), closure.var1_cur_filter_elements)))) {state = 0; return false; }
				var5_const__ = "-";
				var4_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var3_const_), closure.var2_Name25420429_2017_17_3_unicode))));
				current = com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat((java.lang.String)com.altova.functions.Core.first((new seq10_if_greater(closure.var2_Name25420429_2017_17_3_unicode))), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var3_const_), var4_filter_elements))))))))))), var5_const__), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("volume", var3_const_), var4_filter_elements))))))))))), var5_const__), com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("number", var3_const_), var4_filter_elements))))))))))), var5_const__), com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("pages", var3_const_), closure.var1_cur_filter_elements))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_if_greater implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode;
	
		public seq10_if_greater(com.altova.mapforce.IMFNode var2_Name25420429_2017_17_3_unicode)
		{
			this.var2_Name25420429_2017_17_3_unicode = var2_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_if_greater closure;
			java.lang.String var1_const_;
			public Enumerator(seq10_if_greater closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_const_ = "";
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateUni", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("issue", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("journal", var1_const_), closure.var2_Name25420429_2017_17_3_unicode)))))))))))))), "2015"))) {state = 11; return false; }
				current = "10.25205/2542-0429-";
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = "10.25205/1818-7862-";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq11_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_cond_map_filter_elements closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			IEnumerator var2_map_filter_elements;
			java.lang.String var6_cast;
			public Enumerator(seq11_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("keywords", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("keyword", var3_const_);
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(var5_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("kwdGroup", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				var6_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())));
				if (!(com.altova.functions.Lang.matchPattern(var6_cast, ".*[\u0410-\u042F\u0430-\u044F\u0401\u0451]+.*"))) {state = 9; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var5_create_qname, var3_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(var6_cast))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
		com.altova.mapforce.IMFNode var17_Name25420429_2017_17_3_unicode;
	
		public seq12_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements, com.altova.mapforce.IMFNode var17_Name25420429_2017_17_3_unicode)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
			this.var17_Name25420429_2017_17_3_unicode = var17_Name25420429_2017_17_3_unicode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_create_element_with_prefix closure;
			java.lang.String var16_const__;
			java.lang.String var1_const_;
			java.lang.String var15_cast;
			com.altova.mapforce.IEnumerable var9_filter_elements;
			com.altova.mapforce.IEnumerable var8_filter_elements;
			com.altova.mapforce.IEnumerable var6_filter_elements;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			IEnumerator var3_map_filter_elements;
			javax.xml.namespace.QName var7_create_qname;
			IEnumerator var5_map_filter_elements;
			double var13_;
			java.lang.String var12_const__;
			double var11_;
			java.lang.String var10_cast;
			com.altova.mapforce.IEnumerable var14_cast;
			public Enumerator(seq12_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
					case 51:	if (moveNext_51()) return true; break;
					case 55:	if (moveNext_55()) return true; break;
					case 56:	if (moveNext_56()) return true; break;
					case 58:	if (moveNext_58()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var16_const__ = "-";
				var1_const_ = "";
				var15_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("pages", var1_const_), closure.var2_cur_filter_elements)));
				var9_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dates", var1_const_), closure.var2_cur_filter_elements));
				var8_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("files", var1_const_), closure.var2_cur_filter_elements));
				var6_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("abstracts", var1_const_), closure.var2_cur_filter_elements));
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artTitles", var1_const_), closure.var2_cur_filter_elements));
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("language", var1_const_), var1_const_, com.altova.functions.Core.box("EN"));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 10;				
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 7; return false; }
				var3_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("artTitle", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 25;				
				if (!(com.altova.functions.Core.exists(var6_filter_elements))) {state = 24; return false; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var3_map_filter_elements.moveNext()) {state = 11; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), ((com.altova.mapforce.IMFNode)(var3_map_filter_elements.current())))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("title", var1_const_), var1_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_map_filter_elements.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 7;				
				var3_map_filter_elements.close(); var3_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 43;				
				if (!(com.altova.functions.Core.exists(var8_filter_elements))) {state = 41; return false; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				var7_create_qname = com.altova.functions.Core.createQName("abstract", var1_const_);
				var5_map_filter_elements = (com.altova.functions.Core.filterElements(var7_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var6_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var5_map_filter_elements.moveNext()) {state = 28; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var1_const_), ((com.altova.mapforce.IMFNode)(var5_map_filter_elements.current())))))))) {state = 27; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var7_create_qname, var1_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_map_filter_elements.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 24;				
				var5_map_filter_elements.close(); var5_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 49;				
				if (!(com.altova.functions.Core.exists(var9_filter_elements))) {state = 48; return false; }
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 41;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("pdfFileUrl", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("file", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var8_filter_elements))))));
				pos++;
				return true;
			}
			private boolean moveNext_48() throws Exception {
				state = 55;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("pageFrom", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.functions.Core.substringBefore(var15_cast, var16_const__)))));
				pos++;
				return true;
			}
			private boolean moveNext_49() throws Exception {
				state = 51;				
				var13_ = com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("2"));
				var12_const__ = "-";
				var11_ = com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("4"));
				var10_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("dateReceived", var1_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var9_filter_elements))));
				var14_cast = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.CoreTypes.parseDateTime(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.substring(var10_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("7")), var11_), var12_const__), com.altova.functions.Core.substring(var10_cast, var11_, var13_)), var12_const__), com.altova.functions.Core.substring(var10_cast, com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("1")), var13_)), "T00:00:00")))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("publicationDate", var1_const_), var1_const_, var14_cast);
				pos++;
				return true;
			}
			private boolean moveNext_51() throws Exception {
				state = 48;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("registrationDate", var1_const_), var1_const_, var14_cast);
				pos++;
				return true;
			}
			private boolean moveNext_55() throws Exception {
				state = 56;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("pageTo", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.functions.Core.substringAfter(var15_cast, var16_const__)))));
				pos++;
				return true;
			}
			private boolean moveNext_56() throws Exception {
				state = 58;				
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("codes", var1_const_), closure.var2_cur_filter_elements)))) {state = 58; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("doi", var1_const_), var1_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first((new seq9_cond_concat(closure.var2_cur_filter_elements, closure.var17_Name25420429_2017_17_3_unicode)))));
				pos++;
				return true;
			}
			private boolean moveNext_58() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("keywords", var1_const_), var1_const_, (new seq13_cond_map_filter_elements(closure.var2_cur_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var3_map_filter_elements.close(); var3_map_filter_elements = null;
				var5_map_filter_elements.close(); var5_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq13_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_cond_map_filter_elements closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			IEnumerator var2_map_filter_elements;
			java.lang.String var6_cast;
			public Enumerator(seq13_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("keywords", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("keyword", var3_const_);
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(var5_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("kwdGroup", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				var6_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())));
				if (!(com.altova.functions.Lang.matchPattern(var6_cast, ".*[\u0410-\u042F\u0430-\u044F\u0401\u0451]+.*"))) {state = 18; return false; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElementWithPrefix(var5_create_qname, var3_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(var6_cast))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq14_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_cond_map_filter_elements closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq14_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("authors", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("author", var3_const_);
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(var5_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(var5_create_qname, var3_const_, (new seq15_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq15_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_create_element_with_prefix closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var5_filter_elements;
			IEnumerator var1_map_filter_elements;
			IEnumerator var4_map_filter_elements;
			IEnumerator var6_map_filter_elements;
			javax.xml.namespace.QName var7_create_qname;
			IEnumerator var8_map_filter_elements;
			IEnumerator var9_map_filter_elements;
			public Enumerator(seq15_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 58:	if (moveNext_58()) return true; break;
					case 59:	if (moveNext_59()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var5_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements));
				var1_map_filter_elements = (var5_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current())))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("name", var3_const_), var3_const_, com.altova.functions.Core.box(com.altova.functions.Core.substringBefore((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("initials", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))))))), " ")));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 16;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				var4_map_filter_elements = (var5_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var4_map_filter_elements.moveNext()) {state = 17; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var4_map_filter_elements.current())))))))) {state = 16; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("name2", var3_const_), var3_const_, com.altova.functions.Core.box(com.altova.functions.Core.substringAfter((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("initials", var3_const_), ((com.altova.mapforce.IMFNode)(var4_map_filter_elements.current()))))))), " ")));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 27;				
				var4_map_filter_elements.close(); var4_map_filter_elements = null;
				var6_map_filter_elements = (var5_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var6_map_filter_elements.moveNext()) {state = 28; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var6_map_filter_elements.current())))))))) {state = 27; return false; }
				var7_create_qname = com.altova.functions.Core.createQName("surname", var3_const_);
				current = com.altova.functions.Core.createElementWithPrefix(var7_create_qname, var3_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(var7_create_qname, ((com.altova.mapforce.IMFNode)(var6_map_filter_elements.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 39;				
				var6_map_filter_elements.close(); var6_map_filter_elements = null;
				if (!((Boolean)com.altova.functions.Core.first((new seq16_if_any(closure.var2_cur_filter_elements))))) {state = 39; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("email", var3_const_), var3_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first((new seq21_if_any(closure.var2_cur_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_39() throws Exception {
				state = 45;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("polishAffiliation", var3_const_), var3_const_, com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("false"))));
				pos++;
				return true;
			}
			private boolean moveNext_45() throws Exception {
				state = 46;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("order", var3_const_), var3_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("num", var3_const_), closure.var2_cur_filter_elements))))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_46() throws Exception {
				state = 47;				
				var8_map_filter_elements = (var5_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 47;				
				if (!var8_map_filter_elements.moveNext()) {state = 48; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var8_map_filter_elements.current())))))))) {state = 47; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("instituteAffiliation", var3_const_), var3_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("orgName", var3_const_), ((com.altova.mapforce.IMFNode)(var8_map_filter_elements.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_48() throws Exception {
				state = 58;				
				var8_map_filter_elements.close(); var8_map_filter_elements = null;
				var9_map_filter_elements = (var5_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_58() throws Exception {
				state = 58;				
				if (!var9_map_filter_elements.moveNext()) {state = 59; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var9_map_filter_elements.current())))))))) {state = 58; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("departmentAffiliation", var3_const_), var3_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("orgName", var3_const_), ((com.altova.mapforce.IMFNode)(var9_map_filter_elements.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_59() throws Exception {
				state = 0;				
				var9_map_filter_elements.close(); var9_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				var4_map_filter_elements.close(); var4_map_filter_elements = null;
				var6_map_filter_elements.close(); var6_map_filter_elements = null;
				var8_map_filter_elements.close(); var8_map_filter_elements = null;
				var9_map_filter_elements.close(); var9_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq16_if_any(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16_if_any closure;
			public Enumerator(seq16_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists((new seq17_map_map_filter_elements(closure.var1_cur_filter_elements))))) {state = 11; return false; }
				current = com.altova.functions.Core.exists((new seq19_map_map_filter_elements(closure.var1_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_map_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq17_map_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_map_map_filter_elements closure;
			IEnumerator var1_map_map_filter_elements;
			public Enumerator(seq17_map_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_map_filter_elements = ((new seq18_map_filter_elements(closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(((Boolean)(var1_map_map_filter_elements.current())))) {state = 5; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq18_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18_map_filter_elements closure;
			java.lang.String var3_const_;
			IEnumerator var1_map_filter_elements;
			public Enumerator(seq18_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var1_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("email", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq19_map_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq19_map_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq19_map_map_filter_elements closure;
			IEnumerator var1_map_map_filter_elements;
			public Enumerator(seq19_map_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_map_filter_elements = ((new seq20_map_filter_elements(closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(((Boolean)(var1_map_map_filter_elements.current())))) {state = 5; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq20_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq20_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq20_map_filter_elements closure;
			java.lang.String var3_const_;
			IEnumerator var1_map_filter_elements;
			public Enumerator(seq20_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var1_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current())))))))) {state = 15; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("email", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 5;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq21_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq21_if_any(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq21_if_any closure;
			public Enumerator(seq21_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists((new seq22_map_map_filter_elements(closure.var1_cur_filter_elements))))) {state = 17; return false; }
				if (!(com.altova.functions.Core.exists((new seq23_map_map_filter_elements(closure.var1_cur_filter_elements))))) {state = 0; return false; }
				current = (java.lang.String)com.altova.functions.Core.last((new seq24_map_filter_elements(closure.var1_cur_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 0;				
				current = (java.lang.String)com.altova.functions.Core.last((new seq25_map_filter_elements(closure.var1_cur_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq22_map_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq22_map_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq22_map_map_filter_elements closure;
			IEnumerator var1_map_map_filter_elements;
			public Enumerator(seq22_map_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_map_filter_elements = ((new seq18_map_filter_elements(closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(((Boolean)(var1_map_map_filter_elements.current())))) {state = 5; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq23_map_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq23_map_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq23_map_map_filter_elements closure;
			IEnumerator var1_map_map_filter_elements;
			public Enumerator(seq23_map_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_map_filter_elements = ((new seq20_map_filter_elements(closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(((Boolean)(var1_map_map_filter_elements.current())))) {state = 5; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_map_filter_elements.close(); var1_map_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq24_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq24_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq24_map_filter_elements closure;
			java.lang.String var3_const_;
			IEnumerator var1_map_filter_elements;
			IEnumerator var4_map_filter_elements;
			public Enumerator(seq24_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var1_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 13;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current())))))))) {state = 5; return false; }
				var4_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("email", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var4_map_filter_elements.moveNext()) {state = 14; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_map_filter_elements.current())));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 5;				
				var4_map_filter_elements.close(); var4_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_map_filter_elements.close(); var4_map_filter_elements = null;
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq25_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq25_map_filter_elements(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq25_map_filter_elements closure;
			java.lang.String var3_const_;
			IEnumerator var1_map_filter_elements;
			java.lang.String var4_cast;
			IEnumerator var5_return;
			public Enumerator(seq25_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var1_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				var4_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("surname", var3_const_), ((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current())))));
				if (!(com.altova.functions.Lang.empty((java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf1_inputtoresult.create(var4_cast))))) {state = 15; return false; }
				current = "economics@vestnik.nsu.ru";
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				var5_return = (com.mapforce.vmf.vmf1_inputtoresult.create(var4_cast)).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var5_return.moveNext()) {state = 17; return false; }
				current = var5_return.current();
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 5;				
				var5_return.close(); var5_return = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var5_return.close(); var5_return = null;
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq26_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq26_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq26_cond_map_filter_elements closure;
			java.lang.String var3_const_;
			com.altova.mapforce.IEnumerable var4_filter_elements;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq26_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				var4_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("authors", var3_const_), closure.var1_cur_filter_elements));
				if (!(com.altova.functions.Core.exists(var4_filter_elements))) {state = 0; return false; }
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("author", var3_const_), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("reference", var3_const_), var3_const_, (new seq27_create_element_with_prefix(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq27_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq27_create_element_with_prefix(com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq27_create_element_with_prefix closure;
			java.lang.String var3_const_;
			IEnumerator var1_map_filter_elements;
			public Enumerator(seq27_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_const_ = "";
				var1_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("individInfo", var3_const_), closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_filter_elements.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq28_if_equal(((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current()))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("unparsedContent", var3_const_), var3_const_, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first((new seq29_cond_map_filter_elements(((com.altova.mapforce.IMFNode)(var1_map_filter_elements.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("order", var3_const_), var3_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("num", var3_const_), closure.var2_cur_filter_elements))))))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var1_map_filter_elements.close(); var1_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq28_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq28_if_equal(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq28_if_equal closure;
			java.lang.String var2_const_;
			public Enumerator(seq28_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_ = "";
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var2_const_), closure.var1_cur_filter_elements)))))) {state = 11; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("address", var2_const_), closure.var1_cur_filter_elements));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq29_cond_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
	
		public seq29_cond_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq29_cond_map_filter_elements closure;
			java.lang.String var3_const_;
			IEnumerator var2_map_filter_elements;
			public Enumerator(seq29_cond_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 9;				
				var3_const_ = "";
				if (!(com.altova.functions.Core.equal("ENG", com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lang", var3_const_), closure.var1_cur_filter_elements)))))) {state = 0; return false; }
				var2_map_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("address", var3_const_), closure.var1_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_map_filter_elements.moveNext()) {state = 10; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_map_filter_elements.current())));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_map_filter_elements.close(); var2_map_filter_elements = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq30_create_element_with_prefix implements IEnumerable
	{
	
		public seq30_create_element_with_prefix()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq30_create_element_with_prefix closure;
			java.lang.String var1_const_;
			public Enumerator(seq30_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = "";
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("areaScience", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal("1")))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("fieldScience", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal("4")))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("disciplineScience", var1_const_), var1_const_, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal("23")))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varName25420429_2017_17_3_unicode2Instance;

	public void run(String Name25420429_2017_17_3_unicode2SourceFilename, String ic_importTargetFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + Name25420429_2017_17_3_unicode2SourceFilename + "...\n");
		com.altova.io.FileInput Name25420429_2017_17_3_unicode2Source = new com.altova.io.FileInput(Name25420429_2017_17_3_unicode2SourceFilename);
		// open target stream
		com.altova.io.FileOutput ic_importTarget = new com.altova.io.FileOutput(ic_importTargetFilename);

		// run
		run(Name25420429_2017_17_3_unicode2Source, ic_importTarget);

		// close source streams
		Name25420429_2017_17_3_unicode2Source.close();
		// close target stream
		writeTrace("Saving " + ic_importTargetFilename + "...\n");
		ic_importTarget.close();
	}


	// main entry point

	public void run(com.altova.io.Input Name25420429_2017_17_3_unicode2Source, com.altova.io.Output ic_importTarget) throws Exception {
		// Open the source(s)
		org.w3c.dom.Document doc_Name25420429_2017_17_3_unicode2 = XmlTreeOperations.loadDocument(Name25420429_2017_17_3_unicode2Source);
		varName25420429_2017_17_3_unicode2Instance = doc_Name25420429_2017_17_3_unicode2;
		Name25420429_2017_17_3_unicode2Source.close();

		// Create the target
		org.w3c.dom.Document ic_import2Doc = (ic_importTarget.getType() == com.altova.io.Output.IO_DOM) ? ic_importTarget.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		seq1_Main mapping = new seq1_Main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varName25420429_2017_17_3_unicode2Instance, Name25420429_2017_17_3_unicode2Source.getFilename()));

		com.altova.xml.MFDOMWriter.write(mapping, ic_import2Doc);
		// Close the target
		XmlTreeOperations.saveDocument(ic_import2Doc, ic_importTarget, "UTF-8", false, false, true);

		
		if (runDoesCloseAll)
		{
			Name25420429_2017_17_3_unicode2Source.close();
			ic_importTarget.close();
		}
	}



}
